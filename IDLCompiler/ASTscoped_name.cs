/* Generated By:JJTree: Do not edit this line. ASTscoped_name.cs */

/* ASTscoped_name.cs
 * 
 * Project: IIOP.NET
 * IDLToCLSCompiler
 * 
 * WHEN      RESPONSIBLE
 * 14.02.03  Dominic Ullmann (DUL), dominic.ullmann -at- elca.ch
 *  
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */


using System;

namespace parser {

public class ASTscoped_name : SimpleNode {

    #region IFields

    private System.Collections.ArrayList m_nameParts = 
                new System.Collections.ArrayList();
    
    private bool m_hasFileScope = false;
    
    private String m_scopedName;

    #endregion IFields
    #region IConstructors

    public ASTscoped_name(int id) : base(id) {
    }

    public ASTscoped_name(IDLParser p, int id) : base(p, id) {
    }
    
    #endregion IConstructors
    #region IMethods

    /** Accept the visitor. **/
    public override Object jjtAccept(IDLParserVisitor visitor, Object data) {
        return visitor.visit(this, data);
    }
    
    public System.Collections.ArrayList getNameParts() {
        return m_nameParts;
    }
  
    public void addNamePart(String namePart) {
        m_nameParts.Add(namePart);
    }

    public bool hasFileScope() {
        return m_hasFileScope;
    }
  
    public void setHasFileScope(bool hasFileScope) {
        m_hasFileScope = hasFileScope;
    }

    public void setScopedName(String scopedName) {
        m_scopedName = scopedName;
    }
    
    /** returns the CORBA scoped name represented by this node */
    public String getScopedName() {
        return m_scopedName;
    }
    
    public override string GetIdentification() {
      return m_scopedName;
    }
    
    #endregion IMethods

}
}
