/* Generated By:JJTree: Do not edit this line. ASTshift_expr.cs */

using System;
using System.Collections;

namespace parser {

public enum ShiftOps {
    Right /* >> */, Left /* << */
}
    
public class ASTshift_expr : SimpleNode {
        
  #region IFields
    
  private ArrayList m_operations = new ArrayList();
    
  #endregion IFields        
        
  public ASTshift_expr(int id) : base(id) {
  }

  public ASTshift_expr(IDLParser p, int id) : base(p, id) {
  }


  /** Accept the visitor. **/
  public override Object jjtAccept(IDLParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  /// <summary>
  /// Adds the shift operation between the child i and i+1.
  /// </summary>
  public void AppendShiftOperation(ShiftOps operation) {
      m_operations.Add(operation);
  }
  
  /// <summary>
  /// Returns the shift operation between child i and i + 1.
  /// </summary>
  public ShiftOps GetShiftOperation(int i) {
      return (ShiftOps)m_operations[i];
  }  
  
}


}

